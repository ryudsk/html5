1.
function solution(s){
	try{
		if(s.length < 1 || s.length > 100) throw "failed"; 
		var arr = s.split("");
	//	var i = Math.floor(arr.length/2);
		var i = parseInt(arr.length/2);
		if(arr.length % 2 == 0){
			var answer = arr[i-1]+arr[i];
		}else{
			var answer = arr[i];
		}
		return answer;
	}catch(err){
		console.log(err);
	}
}

2.
var seoul = ["Kim","Jane","Ryu","Mike"];
function solution(seoul){
	var answer = seoul.indexOf("Kim");
	return "김서방은 "+answer+"에 있다";
}

3.
function solution(n){
	var answer = 0;
	if(n != 0) { 
		for(i=1; i <= 3000; i++){
			if(n%i == 0){
				answer += i;
			}
		}
	} else {
		answer = 0;
	}
	return answer;
}

4. Q: Why 800000001 -> 811000000   
function solution(n){
	var answer = 0;
	var pn = n;
	var num = n;
	var i = 0;
	do{
		pn = parseInt( pn / 10 );
		i++;
	}while(pn >= 10);
	
	var arr = new Array(i+1);
	while(i >= 0){
		arr[i] = parseInt(num / Math.pow(10,i));
		num = num % Math.pow(10,i);
		i--;
	}
	
	// 큰 수 찾기
	for(var p = 0; p < arr.length-1; p++){
		var tmp = 0;
		for(var q = p+1; q < arr.length; q++){
			if(arr[p] < arr [q]){				
				tmp = arr[p];
				arr[p] = arr[q];
				arr[q] = tmp;
			}
		}
	}

	// arr -> integer
	var answer = "";
	for(var x = 0; x < arr.length; x++){
		answer = answer + arr[x];
	}

 	return parseInt(answer);
}

5.
function solution(n){
	var answer = 0;
	for(var i = 1; i <= n; i++){
		if( i == n / i ){
			answer = (i+1) * (i+1);
			break; 
		} else {
			answer = -1;
		}
	}

	return answer;
}

6. 1~1000 사이 3의 배수와 5의 배수의 합
function solution(){
	var answer = 0;
	for(i = 1; i <= 1000; i++){
		if( i % 3 == 0){
			answer = answer + i;
			continue;
		} else if( i % 5 == 0){
			answer = answer + i;
		}
	}
	return answer;
}
